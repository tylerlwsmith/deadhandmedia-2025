---
import { type Post } from "src/content.config";

export type Props = { posts: Post[] };

const posts = Astro.props.posts;

let tagCounts: { [key: string]: number } = {};
for (const post of posts) {
  for (const tag of post.tagList) {
    const currentCount = tagCounts[tag] || 0;

    tagCounts[tag] = currentCount + 1;
  }
}

const tagCountMin2 = Object.entries(tagCounts).filter(
  ([_tag, count]) => count > 1
);

const tagsAlphabetized = tagCountMin2.toSorted(([tagA], [tagB]) =>
  tagA.localeCompare(tagB)
);

const tagsByCount = tagsAlphabetized.toSorted(
  ([_tagA, countA], [_tagB, countB]) => {
    if (countA > countB) return -1;
    if (countA < countB) return 1;
    return 0;
  }
);
---

<div x-cloak>
  <aside class="blog-filter__sidebar" x-on:click.outside="closeSidebar">
    <div class="blog-filter__sidebar-inner">
      <h3>Filter by Tag</h3>
      <button
        id="reset-filters"
        class="blog-filter__reset-button"
        x-on:click="resetFilters"
        x-bind:disabled="activeFilters.length === 0"
      >
        Reset Filters
      </button>
      <div class="blog-filter__sort-button-wrapper">
        <input
          type="radio"
          id="sort_tags_by_count"
          name="sort_tags_by"
          class="sr-only"
          value="COUNT"
          x-model="sortTagsBy"
          checked
        />
        <label for="sort_tags_by_count" class="blog-filter__sort-button">
          Sort by count
        </label>

        <input
          type="radio"
          id="sort_tags_by_name"
          name="sort_tags_by"
          class="sr-only"
          value="NAME"
          x-model="sortTagsBy"
        />
        <label for="sort_tags_by_name" class="blog-filter__sort-button">
          Sort by name
        </label>
      </div>
      <ul class="blog-filter__list" data-filter-list>
        {
          tagsByCount.map(([tag, count]) => (
            <li
              class="blog-filter__wrapper"
              data-filter-count={count}
              data-filter-name={tag}
            >
              {/* 
              Filter to any tag with at least two attached articles. Most articles
              have several tags, so even if we remove tags with only one article,
              all articles _should_ be findable within the filters.
              
              If we showed the tags with one associated article, those would
              account for about two thirds of all tags, making it harder to
              find anything.
              */}
              <input
                type="checkbox"
                name={tag}
                id={`tag:${tag}`}
                class="blog-filter sr-only"
                value={tag}
                x-model="activeFilters"
              />
              <label for={`tag:${tag}`} class="blog-filter__label">
                {tag}: {count}
              </label>
            </li>
          ))
        }
      </ul>
    </div>
  </aside>
</div>
